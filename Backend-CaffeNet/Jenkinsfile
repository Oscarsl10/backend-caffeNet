pipeline {
  agent any

  stages {
    stage('Clonar') {
      steps {
        git branch: 'main', url: 'https://github.com/Oscarsl10/backend-caffeNet'
      }
    }

    stage('Compilar') {
      steps {
        dir('Backend-CaffeNet') {
          sh 'chmod +x mvnw'
          sh './mvnw clean package -DskipTests'
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        dir('Backend-CaffeNet') {
          sh 'docker build -t backendcaffenet .'
        }
      }
    }

    stage('Smart Deploy') {
      steps {
        dir('Backend-CaffeNet') {
          // Si el contenedor mysql-db NO está corriendo → primer despliegue completo
          // Sino → solo actualiza el backend
          sh '''
            if [ -z "$(docker ps --filter "name=mysql-db" --filter "status=running" -q)" ]; then
              echo "Base de datos NO detectada; desplegando DB + backend..."
              docker compose up -d
            else
              echo "Base de datos ya viva; reiniciando solo el backend..."
              docker compose up -d --no-deps app
            fi
          '''
        }
      }
    }
  }

  post {
    always {
      echo 'Estado final de contenedores:'
      sh 'docker ps'
    }
    failure {
      echo '¡La pipeline ha fallado!'
    }
  }
}
